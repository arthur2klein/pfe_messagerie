apiVersion: v1
kind: Namespace
metadata:

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-data
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: ./volumes/postgres

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: auth-db-data
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: ./volumes/auth

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        env:
        - name: POSTGRES_DB
          value: pfe_database
        - name: POSTGRES_USER
          value: my_user
        - name: POSTGRES_PASSWORD
          value: my_password
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-db-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-db
  template:
    metadata:
      labels:
        app: auth-db
    spec:
      containers:
      - name: auth-db
        image: postgres:latest
        env:
        - name: POSTGRES_DB
          value: pfe_database_auth
        - name: POSTGRES_USER
          value: my_user
        - name: POSTGRES_PASSWORD
          value: my_password
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: auth-db-data
          mountPath: /var/lib/postgresql/data

---
apiVersion: v1
kind: Service
metadata:
  name: auth-db-service
spec:
  selector:
    app: auth-db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: kleinarthu/pfe_api:1.0
        env:
        - name: PG_USER
          value: admin_user
        - name: PG_PASSWORD
          value: admin_password
        - name: PG_HOST
          value: postgres-service
        - name: PG_DATABASE
          value: postgres
        - name: DATABASE
          value: pfe_database
        - name: USER
          value: my_user
        - name: PASSWORD
          value: my_password
        - name: HOST
          value: postgres-service
        - name: PORT
          value: "5432"
        - name: AUTH_DATABASE
          value: pfe_database_auth
        - name: AUTH_USER
          value: my_user
        - name: AUTH_PASSWORD
          value: my_password
        - name: AUTH_HOST
          value: auth-db-service
        - name: AUTH_PORT
          value: "5432"
        ports:
        - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  selector:
    app: api
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front
  template:
    metadata:
      labels:
        app: front
    spec:
      containers:
      - name: front
        image: kleinarthu/pfe_frontend:1.0
        env:
        - name: API_URL
          value: "http://api-service"
        - name: API_PORT
          value: "8000"
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: front-service
spec:
  selector:
    app: front
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: api-service-external
spec:
  selector:
    app: api
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: NodePort

---
apiVersion: v1
kind: Service
metadata:
  name: front-service-external
spec:
  selector:
    app: front
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
  type: NodePort
